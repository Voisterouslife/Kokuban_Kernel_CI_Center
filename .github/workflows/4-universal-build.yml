# .github/workflows/4-universal-build.yml
name: 4. Universal Kernel Builder
on:
  workflow_dispatch:
    inputs:
      project:
        description: '选择要编译的内核项目'
        required: true
        type: choice
        options: [s24_sm8650]
      branch:
        description: '选择要编译的分支'
        required: true
        type: choice
        options: [sukisuultra]
        default: 'sukisuultra'
      do_release:
        description: '是否创建 GitHub Release?'
        required: true
        type: boolean
        default: true
      is_prerelease:
        description: '如果创建 Release, 是否标记为预发布?'
        required: true
        type: boolean
        default: true
  repository_dispatch:
    types: [build-kernel]
jobs:
  # 此任务负责解析不同的触发类型，并为下一步准备统一的输入参数
  prepare-inputs:
    runs-on: ubuntu-latest
    outputs:
      project_key: ${{ steps.parse.outputs.project_key }}
      branch_name: ${{ steps.parse.outputs.branch_name }}
      do_release: ${{ steps.parse.outputs.do_release }}
      is_prerelease: ${{ steps.parse.outputs.is_prerelease }}
    steps:
      - name: Parse Trigger Event
        id: parse
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "project_key=${{ github.event.inputs.project }}" >> $GITHUB_OUTPUT
            echo "branch_name=${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
            echo "do_release=${{ github.event.inputs.do_release }}" >> $GITHUB_OUTPUT
            echo "is_prerelease=${{ github.event.inputs.is_prerelease }}" >> $GITHUB_OUTPUT
          else
            echo "project_key=${{ github.event.client_payload.project }}" >> $GITHUB_OUTPUT
            echo "branch_name=${{ github.event.client_payload.branch }}" >> $GITHUB_OUTPUT
            echo "do_release=true" >> $GITHUB_OUTPUT
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          fi
  # 此任务调用可复用的构建工作流
  call-reusable-build:
    needs: prepare-inputs
    uses: ./.github/workflows/reusable-build-job.yml
    with:
      project_key: ${{ needs.prepare-inputs.outputs.project_key }}
      branch_name: ${{ needs.prepare-inputs.outputs.branch_name }}
      do_release: ${{ needs.prepare-inputs.outputs.do_release }}
      is_prerelease: ${{ needs.prepare-inputs.outputs.is_prerelease }}
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
