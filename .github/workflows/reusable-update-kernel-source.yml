# .github/workflows/reusable-update-kernel-source.yml
name: Reusable - Update Kernel Source
on:
  workflow_call:
    inputs:
      projects_json:
        description: 'JSON string of projects to update. Format: [{"key": "s23", "repo": "Y/s23"}]'
        required: true
        type: string
      ksu_type:
        description: 'The type of KernelSU to update (ksu, mksu, sukisuultra)'
        required: true
        type: string
      latest_commit_short:
        description: 'The short commit hash of the upstream update'
        required: true
        type: string
      commit_message:
        description: 'The commit message for the update'
        required: true
        type: string
    secrets:
      ADMIN_TOKEN:
        required: true

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Central Repo utility files
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            configs/universal.gitignore
          sparse-checkout-cone-mode: false

      - name: Update Kernel Source for each project
        env:
          ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
          PROJECTS_TO_UPDATE: ${{ inputs.projects_json }}
          KSU_TYPE: ${{ inputs.ksu_type }}
          LATEST_COMMIT_SHORT: ${{ inputs.latest_commit_short }}
          COMMIT_MESSAGE: ${{ inputs.commit_message }}
        run: |
          # --- Configuration ---
          declare -A KSU_SETUP_URLS
          KSU_SETUP_URLS["sukisuultra"]="https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh"
          SETUP_URL="${KSU_SETUP_URLS[$KSU_TYPE]}"

          echo "Updating projects with commit message: '$COMMIT_MESSAGE'"
          
          # Loop through projects passed as JSON
          echo "$PROJECTS_TO_UPDATE" | jq -c '.[]' | while read -r project; do
            PROJECT_KEY=$(echo "$project" | jq -r '.key')
            PROJECT_REPO=$(echo "$project" | jq -r '.repo')

            echo "--> Processing update for project: $PROJECT_KEY"
            
            git clone --depth=1 --branch "$KSU_TYPE" "https://x-access-token:$ADMIN_TOKEN@github.com/$PROJECT_REPO.git" "temp_kernel"
            cd temp_kernel

            echo "Writing version file: $LATEST_COMMIT_SHORT"
            echo "$LATEST_COMMIT_SHORT" > KERNELSU_VERSION.txt

            echo "Syncing .gitignore file..."
            cp ${{ github.workspace }}/configs/universal.gitignore ./.gitignore

            echo "Running setup.sh from $SETUP_URL..."
            if [[ "$KSU_TYPE" == "sukisuultra" ]]; then
              curl -LSs "$SETUP_URL" | bash -s susfs-main
            else
              curl -LSs "$SETUP_URL" | bash -s main
            fi
            
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"

            if [[ -n $(git status --porcelain) ]]; then
              git add .
              git commit -m "$COMMIT_MESSAGE"
              git push
            else
              echo "No file changes for $PROJECT_KEY, skipping push."
            fi

            cd .. && rm -rf temp_kernel
          done
