# .github/workflows/2-update-kernelsu.yml
name: 2. Manual Update KernelSU
on:
  workflow_dispatch:
    inputs:
      project:
        description: '选择要更新的内核项目'
        required: true
        type: choice
        options: [s24_sm8650]
      branch:
        description: '选择要更新的分支 (KernelSU 类型)'
        required: true
        type: choice
        options: [sukisuultra]
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      projects_json: ${{ steps.get_info.outputs.projects_json }}
      latest_commit_short: ${{ steps.get_info.outputs.latest_commit_short }}
    steps:
      - name: Checkout Central Repo
        uses: actions/checkout@v4
      - name: Install jq
        run: sudo apt-get install -y jq
      - name: Get Upstream Commit and Project Info
        id: get_info
        env:
          PROJECT_KEY: ${{ github.event.inputs.project }}
          KSU_TYPE: ${{ github.event.inputs.branch }}
        run: |
          declare -A KSU_REPOS
          KSU_REPOS["sukisuultra"]="https://github.com/SukiSU-Ultra/SukiSU-Ultra.git"

          declare -A KSU_BRANCHES
          KSU_BRANCHES["sukisuultra"]="susfs-main"

          UPSTREAM_REPO_URL="${KSU_REPOS[$KSU_TYPE]}"
          UPSTREAM_BRANCH="${KSU_BRANCHES[$KSU_TYPE]}"

          echo "Getting latest commit from $UPSTREAM_REPO_URL..."
          LATEST_COMMIT_SHORT=$(git ls-remote "$UPSTREAM_REPO_URL" "$UPSTREAM_BRANCH" | cut -f1 | cut -c1-7)
          echo "latest_commit_short=$LATEST_COMMIT_SHORT" >> $GITHUB_OUTPUT

          echo "Generating project JSON..."
          PROJECT_REPO=$(jq -r --arg PKEY "$PROJECT_KEY" '.[$PKEY].repo' ${{ github.workspace }}/configs/projects.json)
          # 修正：使用更健壮的多行输出语法
          JSON_STRING=$(jq -cn --arg key "$PROJECT_KEY" --arg repo "$PROJECT_REPO" '[{key: $key, repo: $repo}]')
          echo "projects_json<<EOF" >> $GITHUB_OUTPUT
          echo "$JSON_STRING" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
  call-reusable-workflow:
    needs: prepare
    uses: ./.github/workflows/reusable-update-kernel-source.yml
    with:
      projects_json: ${{ needs.prepare.outputs.projects_json }}
      ksu_type: ${{ github.event.inputs.branch }}
      latest_commit_short: ${{ needs.prepare.outputs.latest_commit_short }}
      commit_message: "ci: manual update ${{ github.event.inputs.branch }} to ${{ needs.prepare.outputs.latest_commit_short }}"
    secrets:
      ADMIN_TOKEN: ${{ secrets.ADMIN_TOKEN }}
